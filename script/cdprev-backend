#!perl

use 5.010001;
use strict;
use warnings;

use Cwd qw(cwd);
use File::chdir;
use Getopt::Long::Complete qw(GetOptionsWithCompletion);

# AUTHORITY
# DATE
# DIST
# VERSION

# FRAGMENT id=shcompgen-hint completer=1 for=cdprev

my $cwd = $ENV{PWD} || cwd();
my @cwd_elems = split m!/+!, $cwd;
my $sort_files_opts = $ENV{CDPREVNEXT_SORT_FILES_OPTS} // '--by-field=name';
my %opts = (
    num => 1,
);

GetOptionsWithCompletion(
    sub {
        [];
    },
    'help|h' => sub {
        print <<USAGE;
Usage:
  % cdprev [options]
Options:
  --help, -h
  --version, -v
  --num=i, -n
USAGE
        exit 0;
    },
    'version|v' => sub {
        no warnings 'once';
        print "cdprev version ", ($main::VERSION || "dev"), "\n";
        exit 0;
    },
    'num|n=i' => \$opts{num},
);


# we are at the root, no siblings
unless (@cwd_elems) {
    print ".\n";
    exit 0;
}

my @dirs;
{
    local $CWD = "..";
    open my $cmd, "sort-files $sort_files_opts |";
    while (defined(my $e = <$cmd>)) {
        chomp $e;
        next unless -d $e;
        push @dirs, $e;
    }
}

my $curpos;
for my $i (0 .. $#dirs) {
    if ($dirs[$i] eq $cwd_elems[-1]) {
        $curpos = $i;
        last;
    }
}

$curpos //= 0;
my $newpos = $curpos + $opts{num} * ($0 =~ /prev-backend$/ ? -1 : 1);
$newpos = 0 if $newpos < 0;
$newpos = @dirs-1 if $newpos >= @dirs;
print "../$dirs[$newpos]\n";

# ABSTRACT: Change to the "previous" or "next" (sibling) directory
# PODNAME:

=head1 SYNOPSIS

To use in shell:

 % cdprev() { cd `cdprev-backend "$1"`; }
 % cdnext() { cd `cdnext-backend "$1"`; }

 % pwd
 /some/path

 % ls
 four/   one/   three/   two/

 % cd four

 % cdnext
 % pwd
 /some/path/one

 % cdnext -n2
 % pwd
 /some/path/two

 % cdprev -n3
 % pwd
 /some/path/four


=head1 DESCRIPTION

B<cdprev> and C<cdnext> are commands to change to "previous" and "next" sibling
directories, respectively. By default, asciibetical ordering is used. You can
change the ordering by setting the L</CDPREVNEXT_SORT_FILES_OPTS> options, as
L<sort-files> utility is used to sort the directories.


=head1 OPTIONS

=head2 --num=i, -n

Integer. Default 1.


=head1 ENVIRONMENT

=head2 CDPREVNEXT_SORT_FILES_OPTS

String. Options to pass to B<sort-files>. Default: C<--by-field name>.


=head1 SEE ALSO

=cut
