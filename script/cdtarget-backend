#!perl

use strict;
use warnings;

use File::Util::Test;
use Path::Tiny;

# AUTHORITY
# DATE
# DIST
# VERSION

our $DEBUG = $ENV{DEBUG};

my $symlink;
GET_SYMLINK: {
    if (!@ARGV || @ARGV==1 && $ARGV[0] eq '') {
        # try to find the only symlink in the directory, use that if we find it
        $symlink = File::Util::Test::get_dir_only_symlink();
        last if defined $symlink;
    }

    if (@ARGV != 1) { warn "Usage: cdtarget [symlink]\n"; print ".\n"; exit }

    $symlink = $ARGV[1];
}

my $target = readlink($symlink);
unless (defined $target) { warn "cdtarget: $symlink not a symlink\n"; print ".\n"; exit }

my $targetp = path($target);
unless ($targetp->is_absolute) {
    $targetp = $targetp->absolute( path($symlink)->parent );
}

if ($targetp->is_dir) {
    print "$targetp\n"; exit;
} else {
    print $targetp->parent, "\n"; exit;
}

# ABSTRACT: Change directory to symlink target's directory
# PODNAME:

=head1 SYNOPSIS

To use in shell:

 % cdtarget() { cd `cdtarget-backend "$1"`; }

 % pwd
 /tmp

 % file p1todo p2
 p1todo: symbolic link to /home/u1/Documents/project1/todo.txt
 p2: symbolic link to /home/u1/Documents/project2

 % cdtarget p1todo

 % pwd
 /home/u1/Documents/project1

 % cdtarget p2

 % pwd
 /home/u1/Documents/project2


=head1 DESCRIPTION

B<cdtarget> is a command to change directory to a symlink target's directory. If
the target is already a directory then it will be used directly, otherwise it's
the target's directory that is used.

If symlink is not specified as argument, and there is a single symlink in the
current directory and nothing else, that symlink will be used.


=head1 ENVIRONMENT


=head1 SEE ALSO
